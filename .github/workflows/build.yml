name: Create package

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
        default: "development"
      file:
        required: false
        type: string
        default: "Dockerfile"
      context:
        required: false
        type: string
        default: "."
      registry:
        required: false
        type: string
        default: "docker.pkg.github.com"
      username:
        required: false
        type: string
        default: 'tudorteisanu'
      manager:
        required: false
        type: string
        default: 'npm'
    secrets:
      BOT_ACCESS_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Parse tag
        run: |
          if [ ${{ inputs.deployment }} = "development" ]; then
            TAG=$(echo $GITHUB_REF | cut -d "/" -f 3)
          else
            if [ ${{ inputs.manager }} == "npm" ]; then
              TAG=$(grep '"version"' package.json | cut -d '"' -f 4 | head -n 1)
            elif [ ${{ inputs.manager }} == "semversioner" ]; then
              pip install semversioner
              TAG=$(semversioner current-version)
            fi
          fi
          
          if [ ${{ inputs.tags }} ]; then
            DOCKER_TAG="${{ inputs.tags }}"
          else
            REPO=$(echo ${{ github.repository }})
            DOCKER_TAG=$(echo "docker.pkg.github.com/$REPO/$TAG")
          fi
 
          echo "DOCKER_TAG="${DOCKER_TAG,,}"" >> $GITHUB_ENV
#
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Extract artifacts
        run: tar -xf dist.tar.gz
#
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}
          username: $GITHUB_ACTOR
          password: ${{ secrets.BOT_ACCESS_TOKEN }}
#
      - name: Build image and push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.context }}
          tags: ${{ env.DOCKER_TAG }}
          file: ${{ inputs.file }}
          push: true
#
