name: Deploy-dev

on:
  workflow_call:
    inputs:
      deployment:
        required: false
        type: string
        default: "development"
      file:
        required: false
        type: string
        default: "Dockerfile"

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Install Semversioner
        run: pip install semversioner

      - name: Get version
        run: |
          if [ ${{ inputs.deployment }} = "development" ]; then
            TAG="${{ github.head_ref }}"
          else
            TAG=$(semversioner current-version)
          fi
          
          if [ ${{ inputs.tags }} ]; then
            DOCKER_TAG="${{ inputs.tags }}"
          else
            REPO=$(echo ${{ github.repository }})
            DOCKER_TAG=$(echo "docker.pkg.github.com/$REPO/$TAG")
          fi
 
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
#
#      - name: Download artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: dist
#
#      - name: Extract artifacts
#        run: tar -xf dist.tar.gz
#
#      - name: Login to Github Packages
#        uses: docker/login-action@v1
#        with:
#          registry: docker.pkg.github.com
#          username: $GITHUB_ACTOR
#          password: ${{ secrets.DOCKER_AUTH_TOKEN }}
      - name: Get tags
        run: echo "$DOCKER_TAG"
#
#      - name: Build image and push to GitHub Packages
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          tags: ${{ $DOCKER_TAG }}
#          file: ${{ inputs.file }}
#          push: true
#
#      - name: Add ssh key
#        run: |
#          set -eu
#          mkdir "$HOME/.ssh"
#          echo "${{ secrets.key }}" > "$HOME/.ssh/key"
#          chmod 600 "$HOME/.ssh/key"
#      - name: Update services
#        shell: bash
#        env:
#          USER: ${{ secrets.user }}
#          HOST: ${{ secrets.host }}
#          DIST: ${{ secrets.dist }}
#        run: ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no $USER@$HOST "${DIST}/setup.sh"
