name: "Release"

on:      
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      releaser:
        required: false
        default: "semversioner"
        type: string
    secrets:
      BOT_ACCESS_TOKEN:
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BOT_ACCESS_TOKEN }}
      
      - run: git config user.name 'Release BOT'
      - run: git config user.email 'noreply.release@github.com'

      - name: Release
        run: |
          if [[ ${{ inputs.releaser }} == 'npm' ]] then
            COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
            TYPE="patch"
            
            if [[ $COMMIT_MESSAGE =~ "[major]" ]]; then
              TYPE="major"
            elif [[ $COMMIT_MESSAGE =~ "[minor]" ]]; then
              TYPE="minor"
            fi
    
            npm version $TYPE -m "[skip ci]"
            VERSION=$(grep '"version"' package.json | cut -d '"' -f 4 | head -n 1)
          elif [[ ${{ inputs.releaser }} == 'semversioner' ]] then
            pip install semversioner
            semversioner next-version
            semversioner release
            semversioner changelog > CHANGELOG.md
            export VERSION=$(semversioner current-version)
            git add .
            git commit -m "Update files for new version '${{ env.VERSION }}' [skip ci]"
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          git push origin master


      - name: Create new tag
        run: |
          git tag $VERSION -m "Tagging for release $VERSION"
          git push origin $VERSION



